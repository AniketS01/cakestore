[{"/home/aniket/projects/cakestore/src/index.js":"1","/home/aniket/projects/cakestore/src/App.js":"2","/home/aniket/projects/cakestore/src/pages/MainPage.js":"3","/home/aniket/projects/cakestore/src/components/cakecards/Cakecards.jsx":"4","/home/aniket/projects/cakestore/src/components/Navbar.js":"5","/home/aniket/projects/cakestore/src/firebase.js":"6","/home/aniket/projects/cakestore/src/forms/CakeForm.js":"7"},{"size":201,"mtime":1635087459468,"results":"8","hashOfConfig":"9"},{"size":170,"mtime":1635088036733,"results":"10","hashOfConfig":"9"},{"size":2227,"mtime":1635090552325,"results":"11","hashOfConfig":"9"},{"size":636,"mtime":1635090352073,"results":"12","hashOfConfig":"9"},{"size":1204,"mtime":1635087459468,"results":"13","hashOfConfig":"9"},{"size":597,"mtime":1635087459468,"results":"14","hashOfConfig":"9"},{"size":4815,"mtime":1635147680947,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1y6svf6",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/aniket/projects/cakestore/src/index.js",[],["34","35"],"/home/aniket/projects/cakestore/src/App.js",[],"/home/aniket/projects/cakestore/src/pages/MainPage.js",["36","37"],"import React, { useEffect, useRef, useState } from 'react';\nimport CakeForm from '../forms/CakeForm';\nimport { PlusCircleDotted } from 'react-bootstrap-icons';\nimport Navbar from '../components/Navbar';\nimport { db } from '../firebase';\nimport Cakecards from '../components/cakecards/Cakecards';\n\nconst MainPage = () => {\n  const [showCakeForm, setShowCakeForm] = useState(false);\n  const [cakes, setCakes] = useState([]);\n\n  useEffect(() => {\n    db.collection('Cakes')\n      .get()\n      .then((snapshot) => {\n        const cake = [];\n        snapshot.forEach((doc) => {\n          const data = {\n            id: doc.id,\n            img_id: doc.data().clourinary_id,\n            name: doc.data().name,\n            image: doc.data().image,\n            category: doc.data().Category,\n            description: doc.data().description,\n            price: doc.data().price,\n          };\n          cake.push(data);\n        });\n        console.log(cake);\n        setCakes(cake);\n        console.log(cakes);\n      });\n  }, []);\n\n  return (\n    <div>\n      <Navbar />\n      <div className=\"container\">\n        <div className=\"d-flex flex-row align-items-center pt-4\">\n          <h3>Add cake</h3>{' '}\n          <PlusCircleDotted\n            fontSize={25}\n            color=\"green\"\n            style={{ marginLeft: '5px' }}\n            onClick={() => {\n              if (showCakeForm) {\n                setShowCakeForm(false);\n              } else {\n                setShowCakeForm(true);\n              }\n            }}\n          />\n        </div>\n        {showCakeForm && (\n          <div className=\"p-4\">\n            {' '}\n            <CakeForm cakes={cakes} setCakes={setCakes} />\n          </div>\n        )}\n        <div>\n          <div className=\"container\" style={{ marginTop: '50px' }}>\n            <div className=\"row\">\n              {cakes.map((cake) => (\n                <Cakecards\n                  img={cake.image}\n                  name={cake.name}\n                  description={cake.description}\n                  price={cake.price}\n                  category={cake.category}\n                />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MainPage;\n","/home/aniket/projects/cakestore/src/components/cakecards/Cakecards.jsx",["38","39"],"import React from 'react';\nimport img1 from '../../imgs/img1.svg';\nimport './cakecards.css';\nconst Cakecards = ({ img, name, description, price }) => {\n  return (\n    <>\n      <div className=\"col-md-3\">\n        <div className=\"card-sl\">\n          <div className=\"card-image\">\n            <img className=\"img-fluid \" src={img} />\n          </div>\n\n          <div className=\"card-heading\">{name}</div>\n          <div className=\"card-text\">{description}</div>\n          <div className=\"card-text\" style={{ fontWeight: 600 }}>\n            Rs {price}/-\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Cakecards;\n","/home/aniket/projects/cakestore/src/components/Navbar.js",["40","41"],"import React from \"react\";\nimport { PersonFill } from \"react-bootstrap-icons\";\n\nconst Navbar = () => {\n  return (\n    <div>\n      <nav\n        class=\"navbar navbar-expand-lg navbar-light bg-light\"\n        style={{ height: \"60px\" }}\n      >\n        <div class=\"container-fluid\">\n          <a class=\"navbar-brand\" href=\"#\">\n            CakeStore\n          </a>\n          <button\n            class=\"navbar-toggler\"\n            type=\"button\"\n            data-bs-toggle=\"collapse\"\n            data-bs-target=\"#navbarNavAltMarkup\"\n            aria-controls=\"navbarNavAltMarkup\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span class=\"navbar-toggler-icon\"></span>\n          </button>\n          <div\n            class=\"collapse navbar-collapse justify-content-end\"\n            id=\"navbarNavAltMarkup\"\n          >\n            <div class=\"navbar-nav\">\n              <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">\n                <PersonFill fontSize={25} style={{ marginRight: \"5px\" }} />\n                Welcome Admin!\n              </a>\n            </div>\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nexport default Navbar;\n","/home/aniket/projects/cakestore/src/firebase.js",[],"/home/aniket/projects/cakestore/src/forms/CakeForm.js",["42","43","44"],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":1,"column":28,"nodeType":"51","messageId":"52","endLine":1,"endColumn":34},{"ruleId":"53","severity":1,"message":"54","line":33,"column":6,"nodeType":"55","endLine":33,"endColumn":8,"suggestions":"56"},{"ruleId":"49","severity":1,"message":"57","line":2,"column":8,"nodeType":"51","messageId":"52","endLine":2,"endColumn":12},{"ruleId":"58","severity":1,"message":"59","line":10,"column":13,"nodeType":"60","endLine":10,"endColumn":53},{"ruleId":"61","severity":1,"message":"62","line":12,"column":11,"nodeType":"60","endLine":12,"endColumn":44},{"ruleId":"61","severity":1,"message":"62","line":31,"column":15,"nodeType":"60","endLine":31,"endColumn":71},{"ruleId":"49","severity":1,"message":"63","line":9,"column":21,"nodeType":"51","messageId":"52","endLine":9,"endColumn":33},{"ruleId":"49","severity":1,"message":"64","line":20,"column":10,"nodeType":"51","messageId":"52","endLine":20,"endColumn":17},{"ruleId":"49","severity":1,"message":"65","line":20,"column":19,"nodeType":"51","messageId":"52","endLine":20,"endColumn":29},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cakes'. Either include it or remove the dependency array.","ArrayExpression",["68"],"'img1' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'setCakeTypes' is assigned a value but never used.","'cakeImg' is assigned a value but never used.","'setCakeImg' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"69","fix":"70"},"Update the dependencies array to be: [cakes]",{"range":"71","text":"72"},[1015,1017],"[cakes]"]