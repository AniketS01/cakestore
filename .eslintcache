[{"D:\\WebDev\\cakestore\\src\\index.js":"1","D:\\WebDev\\cakestore\\src\\App.js":"2","D:\\WebDev\\cakestore\\src\\pages\\MainPage.js":"3","D:\\WebDev\\cakestore\\src\\firebase.js":"4","D:\\WebDev\\cakestore\\src\\forms\\CakeForm.js":"5","D:\\WebDev\\cakestore\\src\\components\\Navbar.js":"6","D:\\WebDev\\cakestore\\src\\components\\cakecards\\Cakecards.jsx":"7"},{"size":215,"mtime":1638441158080,"results":"8","hashOfConfig":"9"},{"size":183,"mtime":1638441158079,"results":"10","hashOfConfig":"9"},{"size":4890,"mtime":1638441158080,"results":"11","hashOfConfig":"9"},{"size":615,"mtime":1638441158079,"results":"12","hashOfConfig":"9"},{"size":5381,"mtime":1638441158080,"results":"13","hashOfConfig":"9"},{"size":1296,"mtime":1638442671959,"results":"14","hashOfConfig":"9"},{"size":1339,"mtime":1638441358895,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"16lnqm5",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"18"},"D:\\WebDev\\cakestore\\src\\index.js",[],["35","36"],"D:\\WebDev\\cakestore\\src\\App.js",[],"D:\\WebDev\\cakestore\\src\\pages\\MainPage.js",["37","38","39","40"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport CakeForm from \"../forms/CakeForm\";\r\nimport { PlusCircleDotted } from \"react-bootstrap-icons\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport { db } from \"../firebase\";\r\nimport Cakecards from \"../components/cakecards/Cakecards\";\r\n\r\nconst MainPage = () => {\r\n  const [showCakeForm, setShowCakeForm] = useState(false);\r\n  const [cakes, setCakes] = useState([]);\r\n  const [DesignerCake, setDesignerCake] = useState([]);\r\n  const [festivalCake, setFestivalCake] = useState([]);\r\n  const [birthdayCake, setBirthdayCake] = useState([]);\r\n\r\n  useEffect(() => {\r\n    db.collection(\"Cakes\")\r\n      .get()\r\n      .then((snapshot) => {\r\n        const Dcake = [];\r\n        const Fcake = [];\r\n        const Bcakes = [];\r\n        snapshot.forEach((doc) => {\r\n          const data = {\r\n            id: doc.id,\r\n            img_id: doc.data().clourinary_id,\r\n            name: doc.data().name,\r\n            image: doc.data().image,\r\n            category: doc.data().Category,\r\n            description: doc.data().description,\r\n            price: doc.data().price,\r\n          };\r\n          if (data.category === \"Designer cake\") {\r\n            Dcake.push(data);\r\n          }\r\n          if (data.category === \"Festival cake\") {\r\n            Fcake.push(data);\r\n          }\r\n          if (data.category === \"Birthday Cake\") {\r\n            Bcakes.push(data);\r\n          }\r\n        });\r\n        setDesignerCake(Dcake);\r\n        setFestivalCake(Fcake);\r\n        setBirthdayCake(Bcakes);\r\n      });\r\n    console.log(DesignerCake);\r\n  }, []);\r\n\r\n  const removeDesignerCake = (id) => {\r\n    setDesignerCake(DesignerCake.filter((cake) => cake.id !== id));\r\n  };\r\n\r\n  const removeFestivalCake = (id) => {\r\n    setFestivalCake(festivalCake.filter((cake) => cake.id !== id));\r\n  };\r\n\r\n  const removeBirthdayCake = (id) => {\r\n    setBirthdayCake(birthdayCake.filter((cake) => cake.id !== id));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <div className='container'>\r\n        <div className='d-flex flex-row align-items-center pt-4'>\r\n          <h3>Add cake</h3>{\" \"}\r\n          <PlusCircleDotted\r\n            fontSize={25}\r\n            color='green'\r\n            style={{ marginLeft: \"5px\" }}\r\n            onClick={() => {\r\n              if (showCakeForm) {\r\n                setShowCakeForm(false);\r\n              } else {\r\n                setShowCakeForm(true);\r\n              }\r\n            }}\r\n          />\r\n        </div>\r\n        {showCakeForm && (\r\n          <div className='p-4'>\r\n            {\" \"}\r\n            <CakeForm\r\n              birthdayCake={birthdayCake}\r\n              setBirthdayCake={setBirthdayCake}\r\n              festivalCake={festivalCake}\r\n              setFestivalCake={setFestivalCake}\r\n              DesignerCake={DesignerCake}\r\n              setDesignerCake={setDesignerCake}\r\n            />\r\n          </div>\r\n        )}\r\n        <div>\r\n          <div className='container' style={{ marginTop: \"50px\" }}>\r\n            <h1> Designer Cake </h1>\r\n            <div className='row'>\r\n              {DesignerCake.map((cake) => (\r\n                <Cakecards\r\n                  id={cake.id}\r\n                  img={cake.image}\r\n                  img_id={cake.img_id}\r\n                  name={cake.name}\r\n                  description={cake.description}\r\n                  price={cake.price}\r\n                  category={cake.category}\r\n                  removeData={(id) => removeDesignerCake(id)}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div className='container' style={{ marginTop: \"50px\" }}>\r\n            <h1>Festival cake</h1>\r\n            <div className='row'>\r\n              {festivalCake.map((cake) => (\r\n                <Cakecards\r\n                  id={cake.id}\r\n                  img={cake.image}\r\n                  img_id={cake.img_id}\r\n                  name={cake.name}\r\n                  description={cake.description}\r\n                  price={cake.price}\r\n                  category={cake.category}\r\n                  removeData={(id) => removeFestivalCake(id)}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div className='container' style={{ marginTop: \"50px\" }}>\r\n            <h1> Birthday Cake</h1>\r\n            <div className='row'>\r\n              {birthdayCake.map((cake) => (\r\n                <Cakecards\r\n                  id={cake.id}\r\n                  img={cake.image}\r\n                  img_id={cake.img_id}\r\n                  name={cake.name}\r\n                  description={cake.description}\r\n                  price={cake.price}\r\n                  category={cake.category}\r\n                  removeData={(id) => removeBirthdayCake(id)}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","D:\\WebDev\\cakestore\\src\\firebase.js",[],"D:\\WebDev\\cakestore\\src\\forms\\CakeForm.js",["41","42","43"],"import axios from \"axios\";\r\nimport React, { useState, useRef } from \"react\";\r\nimport { db } from \"../firebase\";\r\nimport \"./cakeform.css\";\r\nimport { Line } from \"rc-progress\";\r\n//import ProgressBar from 'react-customizable-progressbar';\r\n\r\nconst CakeForm = ({\r\n  birthdayCake,\r\n  setBirthdayCake,\r\n  festivalCake,\r\n  setFestivalCake,\r\n  DesignerCake,\r\n  setDesignerCake,\r\n}) => {\r\n  const [cakeTypes, setCakeTypes] = useState([\r\n    \"Designer cake\",\r\n    \"Festival cake\",\r\n    \"Birthday Cake\",\r\n  ]);\r\n  const Add = cakeTypes.map((Add) => Add);\r\n  const name = useRef();\r\n  const description = useRef();\r\n  const price = useRef();\r\n  const Category = useRef();\r\n\r\n  const [cakeImg, setCakeImg] = useState();\r\n  const [cakePreview, setCakePreview] = useState();\r\n  const [success, setSuccess] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [done, setDone] = useState(0);\r\n  const [showProgress, setShowProgress] = useState(false);\r\n\r\n  const HandleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setShowProgress(true);\r\n    setDone(40);\r\n\r\n    try {\r\n      if (!cakePreview) return;\r\n      const { data } = await axios.post(\"http://localhost:5000/api/upload\", {\r\n        data: cakePreview,\r\n      });\r\n      const detail = {\r\n        image: data.secure_url,\r\n        clourinary_id: data.public_id,\r\n        name: name.current.value,\r\n        description: description.current.value,\r\n        Category: Category.current.value,\r\n        price: price.current.value,\r\n      };\r\n\r\n      await db.collection(\"Cakes\").add(detail);\r\n      setDone(100);\r\n      if (detail.Category === \"Designer cake\") {\r\n        setDesignerCake([detail, ...DesignerCake]);\r\n      }\r\n      if (detail.Category === \"Festival cake\") {\r\n        setFestivalCake([detail, ...festivalCake]);\r\n      }\r\n      if (detail.Category === \"Birthday Cake\") {\r\n        setBirthdayCake([detail, ...birthdayCake]);\r\n      }\r\n      setSuccess(true);\r\n      setError(false);\r\n      setTimeout(() => {\r\n        setSuccess(false);\r\n        setDone(0);\r\n        setShowProgress(false);\r\n      }, 3000);\r\n    } catch (error) {\r\n      setError(true);\r\n      setSuccess(false);\r\n      setTimeout(() => {\r\n        setError(false);\r\n      }, 3000);\r\n    }\r\n  };\r\n\r\n  const preview = (file) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onloadend = () => {\r\n      setCakePreview(reader.result);\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div className='container contact-form shadow p-3 mb-5 bg-white rounded'>\r\n      {showProgress && (\r\n        <div className='d-flex'>\r\n          <Line\r\n            percent={done}\r\n            strokeWidth='1'\r\n            strokeColor='#50DBB4'\r\n            trailColor='white'\r\n          />\r\n          <span>{done}%</span>\r\n        </div>\r\n      )}\r\n      <form method='post' onSubmit={HandleSubmit}>\r\n        {success && (\r\n          <div className='alert alert-success' role='alert'>\r\n            success!\r\n          </div>\r\n        )}\r\n        {error && (\r\n          <div className='alert alert-danger' role='alert'>\r\n            something went wrong!\r\n          </div>\r\n        )}\r\n        <h3>Add You Cakes Here</h3>\r\n\r\n        <div className='row'>\r\n          <div className='col-md-6'>\r\n            <div className='form-group'>\r\n              <input\r\n                type='file'\r\n                className='form-control'\r\n                placeholder='Select Image From here'\r\n                onChange={(e) => preview(e.target.files[0])}\r\n                value=''\r\n              />\r\n              {cakePreview && (\r\n                <img\r\n                  style={{ height: \"120px\" }}\r\n                  alt='enter img'\r\n                  src={cakePreview}\r\n                />\r\n              )}\r\n            </div>\r\n\r\n            <div className='form-group mt-2'>\r\n              <input\r\n                type='text'\r\n                className='form-control'\r\n                placeholder='Enter Product Name'\r\n                ref={name}\r\n              />\r\n            </div>\r\n            <div className='form-group mt-2'>\r\n              <input\r\n                type='text'\r\n                className='form-control'\r\n                placeholder='Enter Price'\r\n                ref={price}\r\n              />\r\n            </div>\r\n            <div className='form-group mt-2'>\r\n              <select\r\n                className='form-control'\r\n                placeholder='Select a Category'\r\n                ref={Category}\r\n              >\r\n                {Add.map((address, key) => (\r\n                  <option value={address}>{address}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className='col-md-6 text-area '>\r\n            <div className='form-group '>\r\n              <textarea\r\n                name='txtMsg'\r\n                className='form-control'\r\n                placeholder='Your Message *'\r\n                style={{ width: \"100%\", height: \"180px\" }}\r\n                ref={description}\r\n              ></textarea>\r\n            </div>\r\n          </div>\r\n          <div className='form-group mt-2'>\r\n            <input\r\n              type='submit'\r\n              name='btnSubmit'\r\n              className='btnContact'\r\n              value='Submit'\r\n            />\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CakeForm;\r\n","D:\\WebDev\\cakestore\\src\\components\\Navbar.js",["44","45"],"import React from \"react\";\r\nimport { PersonFill } from \"react-bootstrap-icons\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <div>\r\n      <nav\r\n        className=\"navbar navbar-expand-lg navbar-dark \"\r\n        style={{ height: \"60px\" ,backgroundColor:\"#C3404E\",}}\r\n      >\r\n        <div class=\"container-fluid\" >\r\n          <a className=\"navbar-brand ms-4\" href=\"#\">\r\n            Virashmani The Baker \r\n          </a>\r\n          <button\r\n            class=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarNavAltMarkup\"\r\n            aria-controls=\"navbarNavAltMarkup\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div\r\n            class=\"collapse navbar-collapse justify-content-end\"\r\n            id=\"navbarNavAltMarkup\"\r\n          >\r\n            <div class=\"navbar-nav\">\r\n              <a class=\"nav-link active me-4\" aria-current=\"page\" href=\"#\">\r\n                <PersonFill fontSize={25} style={{ marginRight: \"5px\" }} />\r\n                Welcome Admin!\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","D:\\WebDev\\cakestore\\src\\components\\cakecards\\Cakecards.jsx",["46","47"],"import React from \"react\";\r\nimport img1 from \"../../imgs/img1.svg\";\r\nimport \"./cakecards.css\";\r\nimport { db } from \"../../firebase\";\r\nimport axios from \"axios\";\r\nconst Cakecards = ({\r\n  id,\r\n  img,\r\n  img_id,\r\n  name,\r\n  description,\r\n  price,\r\n  removeData,\r\n}) => {\r\n  const deleteCake = async () => {\r\n    try {\r\n      console.log(img_id);\r\n      await db.collection(\"Cakes\").doc(id).delete();\r\n      axios.post(`http://localhost:5000/api/delete`, {\r\n        clid: img_id,\r\n      });\r\n      console.log(\"success\");\r\n      removeData(id);\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className='col-md-3'>\r\n        <div className='card-sl'>\r\n          <div className='card-image'>\r\n            <img className='img-fluid cardsize' src={img} />\r\n          </div>\r\n\r\n          <div className='card-heading'>{name}</div>\r\n          <div className='card-text'>{description}</div>\r\n          <div\r\n            className='card-text d-flex align-items-center justify-content-between'\r\n            style={{ fontWeight: \"600\" }}\r\n          >\r\n            Rs {price}/-\r\n            <button className='btn btn-danger btn-sm' onClick={deleteCake}>\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cakecards;\r\n",{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":1,"column":28,"nodeType":"54","messageId":"55","endLine":1,"endColumn":34},{"ruleId":"52","severity":1,"message":"56","line":10,"column":10,"nodeType":"54","messageId":"55","endLine":10,"endColumn":15},{"ruleId":"52","severity":1,"message":"57","line":10,"column":17,"nodeType":"54","messageId":"55","endLine":10,"endColumn":25},{"ruleId":"58","severity":1,"message":"59","line":47,"column":6,"nodeType":"60","endLine":47,"endColumn":8,"suggestions":"61"},{"ruleId":"52","severity":1,"message":"62","line":16,"column":21,"nodeType":"54","messageId":"55","endLine":16,"endColumn":33},{"ruleId":"52","severity":1,"message":"63","line":27,"column":10,"nodeType":"54","messageId":"55","endLine":27,"endColumn":17},{"ruleId":"52","severity":1,"message":"64","line":27,"column":19,"nodeType":"54","messageId":"55","endLine":27,"endColumn":29},{"ruleId":"65","severity":1,"message":"66","line":12,"column":11,"nodeType":"67","endLine":12,"endColumn":53},{"ruleId":"65","severity":1,"message":"66","line":31,"column":15,"nodeType":"67","endLine":31,"endColumn":76},{"ruleId":"52","severity":1,"message":"68","line":2,"column":8,"nodeType":"54","messageId":"55","endLine":2,"endColumn":12},{"ruleId":"69","severity":1,"message":"70","line":34,"column":13,"nodeType":"67","endLine":34,"endColumn":61},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'cakes' is assigned a value but never used.","'setCakes' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'DesignerCake'. Either include it or remove the dependency array.","ArrayExpression",["73"],"'setCakeTypes' is assigned a value but never used.","'cakeImg' is assigned a value but never used.","'setCakeImg' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'img1' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"74","fix":"75"},"Update the dependencies array to be: [DesignerCake]",{"range":"76","text":"77"},[1585,1587],"[DesignerCake]"]