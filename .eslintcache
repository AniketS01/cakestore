[{"C:\\Users\\UB's\\Desktop\\client1\\admin\\cakestore\\src\\index.js":"1","C:\\Users\\UB's\\Desktop\\client1\\admin\\cakestore\\src\\App.js":"2","C:\\Users\\UB's\\Desktop\\client1\\admin\\cakestore\\src\\pages\\MainPage.js":"3","C:\\Users\\UB's\\Desktop\\client1\\admin\\cakestore\\src\\firebase.js":"4","C:\\Users\\UB's\\Desktop\\client1\\admin\\cakestore\\src\\forms\\CakeForm.js":"5","C:\\Users\\UB's\\Desktop\\client1\\admin\\cakestore\\src\\components\\Navbar.js":"6","C:\\Users\\UB's\\Desktop\\client1\\admin\\cakestore\\src\\components\\cakecards\\Cakecards.jsx":"7"},{"size":215,"mtime":1635065306350,"results":"8","hashOfConfig":"9"},{"size":261,"mtime":1635066886345,"results":"10","hashOfConfig":"9"},{"size":1057,"mtime":1635065306351,"results":"11","hashOfConfig":"9"},{"size":615,"mtime":1635065306346,"results":"12","hashOfConfig":"9"},{"size":3840,"mtime":1635065306347,"results":"13","hashOfConfig":"9"},{"size":1247,"mtime":1635065306345,"results":"14","hashOfConfig":"9"},{"size":1827,"mtime":1635069454288,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"aehbpl",{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\UB's\\Desktop\\client1\\admin\\cakestore\\src\\index.js",[],"C:\\Users\\UB's\\Desktop\\client1\\admin\\cakestore\\src\\App.js",[],["34","35"],"C:\\Users\\UB's\\Desktop\\client1\\admin\\cakestore\\src\\pages\\MainPage.js",["36","37"],"import React, { useRef, useState } from 'react';\r\nimport CakeForm from '../forms/CakeForm';\r\nimport { PlusCircleDotted } from 'react-bootstrap-icons';\r\nimport Navbar from '../components/Navbar';\r\nimport { db } from '../firebase';\r\n\r\nconst MainPage = () => {\r\n  const [showCakeForm, setShowCakeForm] = useState(false);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <div className=\"container\">\r\n        <div className=\"d-flex flex-row align-items-center pt-4\">\r\n          <h3>Add cake</h3>{' '}\r\n          <PlusCircleDotted\r\n            fontSize={25}\r\n            color=\"green\"\r\n            style={{ marginLeft: '5px' }}\r\n            onClick={() => {\r\n              if (showCakeForm) {\r\n                setShowCakeForm(false);\r\n              } else {\r\n                setShowCakeForm(true);\r\n              }\r\n            }}\r\n          />\r\n        </div>\r\n        {showCakeForm && (\r\n          <div className=\"p-4\">\r\n            {' '}\r\n            <CakeForm />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","C:\\Users\\UB's\\Desktop\\client1\\admin\\cakestore\\src\\firebase.js",[],"C:\\Users\\UB's\\Desktop\\client1\\admin\\cakestore\\src\\forms\\CakeForm.js",["38","39","40"],"import axios from 'axios';\r\nimport React, { useState, useRef } from 'react';\r\nimport { db } from '../firebase';\r\n\r\nconst CakeForm = () => {\r\n  const [cakeTypes, setCakeTypes] = useState([\r\n    'Designer cake',\r\n    'Festival cake',\r\n    'Birthday Cake',\r\n  ]);\r\n  const Add = cakeTypes.map((Add) => Add);\r\n  const name = useRef();\r\n  const description = useRef();\r\n  const price = useRef();\r\n  const Category = useRef();\r\n\r\n  const [cakeImg, setCakeImg] = useState();\r\n  const [cakePreview, setCakePreview] = useState();\r\n  const [success, setSuccess] = useState(false);\r\n  const [error, setError] = useState(false);\r\n\r\n  const HandleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      if (!cakePreview) return;\r\n      const { data } = await axios.post('http://localhost:5000/api/upload', {\r\n        data: cakePreview,\r\n      });\r\n      const detail = {\r\n        image: data.secure_url,\r\n        clourinary_id: data.public_id,\r\n        name: name.current.value,\r\n        description: description.current.value,\r\n        Category: Category.current.value,\r\n        price: price.current.value,\r\n      };\r\n\r\n      await db.collection('Cakes').add(detail);\r\n      setSuccess(true);\r\n      setError(false);\r\n      setTimeout(() => {\r\n        setSuccess(false);\r\n      }, 3000);\r\n    } catch (error) {\r\n      setError(true);\r\n      setSuccess(false);\r\n      setTimeout(() => {\r\n        setError(false);\r\n      }, 3000);\r\n    }\r\n  };\r\n\r\n  const preview = (file) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onloadend = () => {\r\n      setCakePreview(reader.result);\r\n    };\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={HandleSubmit}>\r\n      <div className=\"container d-flex flex-column\">\r\n        {success && (\r\n          <div class=\"alert alert-success\" role=\"alert\">\r\n            success!\r\n          </div>\r\n        )}\r\n        {error && (\r\n          <div class=\"alert alert-danger\" role=\"alert\">\r\n            something went wrong!\r\n          </div>\r\n        )}\r\n        <label htmlFor=\"\" style={{ fontWeight: '600' }}>\r\n          {' '}\r\n          Image :\r\n          <input\r\n            type=\"file\"\r\n            onChange={(e) => preview(e.target.files[0])}\r\n            className=\"mb-2\"\r\n          />\r\n          {cakePreview && (\r\n            <img\r\n              style={{ height: '120px' }}\r\n              alt=\"enter img\"\r\n              src={cakePreview}\r\n            />\r\n          )}\r\n          {/* {cakeImg && console.log(URL.createObjectURL(cakeImg))} */}\r\n        </label>\r\n        <label htmlFor=\"\" style={{ fontWeight: '600' }}>\r\n          Name :{' '}\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter Product name\"\r\n            className=\"mb-2\"\r\n            ref={name}\r\n          />\r\n        </label>\r\n        <label htmlFor=\"\" style={{ fontWeight: '600' }}>\r\n          description :{' '}\r\n        </label>\r\n        <textarea\r\n          name=\"\"\r\n          id=\"\"\r\n          cols=\"15\"\r\n          rows=\"5\"\r\n          placeholder=\"Enter a Description \"\r\n          className=\"mb-2\"\r\n          ref={description}\r\n        ></textarea>\r\n        <label htmlFor=\"\" style={{ fontWeight: '600' }}>\r\n          Price :{' '}\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter price\"\r\n            className=\"mb-2\"\r\n            ref={price}\r\n          />\r\n        </label>\r\n\r\n        <label htmlFor=\"\" style={{ fontWeight: '600' }}>\r\n          Category :{' '}\r\n          <select name=\"\" id=\"\" className=\"mb-2\" ref={Category}>\r\n            {Add.map((address, key) => (\r\n              <option value={address}>{address}</option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n\r\n        <button type=\"submit\" className=\"btn  btn-primary mt-3\">\r\n          Submit\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CakeForm;\r\n","C:\\Users\\UB's\\Desktop\\client1\\admin\\cakestore\\src\\components\\Navbar.js",["41","42"],"import React from 'react';\r\nimport { PersonFill } from 'react-bootstrap-icons';\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <div>\r\n      <nav\r\n        class=\"navbar navbar-expand-lg navbar-light bg-light\"\r\n        style={{ height: '60px' }}\r\n      >\r\n        <div class=\"container-fluid\">\r\n          <a class=\"navbar-brand\" href=\"#\">\r\n            CakeStore\r\n          </a>\r\n          <button\r\n            class=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarNavAltMarkup\"\r\n            aria-controls=\"navbarNavAltMarkup\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div\r\n            class=\"collapse navbar-collapse justify-content-end\"\r\n            id=\"navbarNavAltMarkup\"\r\n          >\r\n            <div class=\"navbar-nav\">\r\n              <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                <PersonFill fontSize={25} style={{ marginRight: '5px' }} />\r\n                Welcome Admin!\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","C:\\Users\\UB's\\Desktop\\client1\\admin\\cakestore\\src\\components\\cakecards\\Cakecards.jsx",["43","44","45"],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":1,"column":17,"nodeType":"52","messageId":"53","endLine":1,"endColumn":23},{"ruleId":"50","severity":1,"message":"54","line":5,"column":10,"nodeType":"52","messageId":"53","endLine":5,"endColumn":12},{"ruleId":"50","severity":1,"message":"55","line":6,"column":21,"nodeType":"52","messageId":"53","endLine":6,"endColumn":33},{"ruleId":"50","severity":1,"message":"56","line":17,"column":10,"nodeType":"52","messageId":"53","endLine":17,"endColumn":17},{"ruleId":"50","severity":1,"message":"57","line":17,"column":19,"nodeType":"52","messageId":"53","endLine":17,"endColumn":29},{"ruleId":"58","severity":1,"message":"59","line":12,"column":11,"nodeType":"60","endLine":12,"endColumn":44},{"ruleId":"58","severity":1,"message":"59","line":31,"column":15,"nodeType":"60","endLine":31,"endColumn":71},{"ruleId":"50","severity":1,"message":"61","line":2,"column":8,"nodeType":"52","messageId":"53","endLine":2,"endColumn":12},{"ruleId":"62","severity":1,"message":"63","line":13,"column":17,"nodeType":"60","endLine":13,"endColumn":141},{"ruleId":"62","severity":1,"message":"63","line":29,"column":17,"nodeType":"60","endLine":29,"endColumn":141},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'db' is defined but never used.","'setCakeTypes' is assigned a value but never used.","'cakeImg' is assigned a value but never used.","'setCakeImg' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'img1' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]