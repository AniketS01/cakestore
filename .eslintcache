[{"/home/aniket/projects/cakestore/src/index.js":"1","/home/aniket/projects/cakestore/src/App.js":"2","/home/aniket/projects/cakestore/src/pages/MainPage.js":"3","/home/aniket/projects/cakestore/src/firebase.js":"4","/home/aniket/projects/cakestore/src/forms/CakeForm.js":"5","/home/aniket/projects/cakestore/src/components/Navbar.js":"6","/home/aniket/projects/cakestore/src/components/cakecards/Cakecards.jsx":"7"},{"size":201,"mtime":1638435648476,"results":"8","hashOfConfig":"9"},{"size":170,"mtime":1638435648476,"results":"10","hashOfConfig":"9"},{"size":4739,"mtime":1638437750547,"results":"11","hashOfConfig":"9"},{"size":597,"mtime":1638435648476,"results":"12","hashOfConfig":"9"},{"size":5195,"mtime":1638436972126,"results":"13","hashOfConfig":"9"},{"size":1204,"mtime":1638435648476,"results":"14","hashOfConfig":"9"},{"size":1264,"mtime":1638437903396,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1kr23jj",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/aniket/projects/cakestore/src/index.js",[],["33","34"],"/home/aniket/projects/cakestore/src/App.js",[],"/home/aniket/projects/cakestore/src/pages/MainPage.js",["35","36","37","38"],"/home/aniket/projects/cakestore/src/firebase.js",[],"/home/aniket/projects/cakestore/src/forms/CakeForm.js",["39","40","41"],"import axios from \"axios\";\nimport React, { useState, useRef } from \"react\";\nimport { db } from \"../firebase\";\nimport \"./cakeform.css\";\nimport { Line } from \"rc-progress\";\n//import ProgressBar from 'react-customizable-progressbar';\n\nconst CakeForm = ({\n  birthdayCake,\n  setBirthdayCake,\n  festivalCake,\n  setFestivalCake,\n  DesignerCake,\n  setDesignerCake,\n}) => {\n  const [cakeTypes, setCakeTypes] = useState([\n    \"Designer cake\",\n    \"Festival cake\",\n    \"Birthday Cake\",\n  ]);\n  const Add = cakeTypes.map((Add) => Add);\n  const name = useRef();\n  const description = useRef();\n  const price = useRef();\n  const Category = useRef();\n\n  const [cakeImg, setCakeImg] = useState();\n  const [cakePreview, setCakePreview] = useState();\n  const [success, setSuccess] = useState(false);\n  const [error, setError] = useState(false);\n  const [done, setDone] = useState(0);\n  const [showProgress, setShowProgress] = useState(false);\n\n  const HandleSubmit = async (e) => {\n    e.preventDefault();\n    setShowProgress(true);\n    setDone(40);\n\n    try {\n      if (!cakePreview) return;\n      const { data } = await axios.post(\"http://localhost:5000/api/upload\", {\n        data: cakePreview,\n      });\n      const detail = {\n        image: data.secure_url,\n        clourinary_id: data.public_id,\n        name: name.current.value,\n        description: description.current.value,\n        Category: Category.current.value,\n        price: price.current.value,\n      };\n\n      await db.collection(\"Cakes\").add(detail);\n      setDone(100);\n      if (detail.Category === \"Designer cake\") {\n        setDesignerCake([detail, ...DesignerCake]);\n      }\n      if (detail.Category === \"Festival cake\") {\n        setFestivalCake([detail, ...festivalCake]);\n      }\n      if (detail.Category === \"Birthday Cake\") {\n        setBirthdayCake([detail, ...birthdayCake]);\n      }\n      setSuccess(true);\n      setError(false);\n      setTimeout(() => {\n        setSuccess(false);\n        setDone(0);\n        setShowProgress(false);\n      }, 3000);\n    } catch (error) {\n      setError(true);\n      setSuccess(false);\n      setTimeout(() => {\n        setError(false);\n      }, 3000);\n    }\n  };\n\n  const preview = (file) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onloadend = () => {\n      setCakePreview(reader.result);\n    };\n  };\n\n  return (\n    <div className='container contact-form shadow p-3 mb-5 bg-white rounded'>\n      {showProgress && (\n        <div className='d-flex'>\n          <Line\n            percent={done}\n            strokeWidth='1'\n            strokeColor='#50DBB4'\n            trailColor='white'\n          />\n          <span>{done}%</span>\n        </div>\n      )}\n      <form method='post' onSubmit={HandleSubmit}>\n        {success && (\n          <div className='alert alert-success' role='alert'>\n            success!\n          </div>\n        )}\n        {error && (\n          <div className='alert alert-danger' role='alert'>\n            something went wrong!\n          </div>\n        )}\n        <h3>Add You Cakes Here</h3>\n\n        <div className='row'>\n          <div className='col-md-6'>\n            <div className='form-group'>\n              <input\n                type='file'\n                className='form-control'\n                placeholder='Select Image From here'\n                onChange={(e) => preview(e.target.files[0])}\n                value=''\n              />\n              {cakePreview && (\n                <img\n                  style={{ height: \"120px\" }}\n                  alt='enter img'\n                  src={cakePreview}\n                />\n              )}\n            </div>\n\n            <div className='form-group mt-2'>\n              <input\n                type='text'\n                className='form-control'\n                placeholder='Enter Product Name'\n                ref={name}\n              />\n            </div>\n            <div className='form-group mt-2'>\n              <input\n                type='text'\n                className='form-control'\n                placeholder='Enter Price'\n                ref={price}\n              />\n            </div>\n            <div className='form-group mt-2'>\n              <select\n                className='form-control'\n                placeholder='Select a Category'\n                ref={Category}\n              >\n                {Add.map((address, key) => (\n                  <option value={address}>{address}</option>\n                ))}\n              </select>\n            </div>\n          </div>\n          <div className='col-md-6 text-area '>\n            <div className='form-group '>\n              <textarea\n                name='txtMsg'\n                className='form-control'\n                placeholder='Your Message *'\n                style={{ width: \"100%\", height: \"180px\" }}\n                ref={description}\n              ></textarea>\n            </div>\n          </div>\n          <div className='form-group mt-2'>\n            <input\n              type='submit'\n              name='btnSubmit'\n              className='btnContact'\n              value='Submit'\n            />\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default CakeForm;\n","/home/aniket/projects/cakestore/src/components/Navbar.js",["42","43"],"import React from \"react\";\nimport { PersonFill } from \"react-bootstrap-icons\";\n\nconst Navbar = () => {\n  return (\n    <div>\n      <nav\n        class=\"navbar navbar-expand-lg navbar-light bg-light\"\n        style={{ height: \"60px\" }}\n      >\n        <div class=\"container-fluid\">\n          <a class=\"navbar-brand\" href=\"#\">\n            CakeStore\n          </a>\n          <button\n            class=\"navbar-toggler\"\n            type=\"button\"\n            data-bs-toggle=\"collapse\"\n            data-bs-target=\"#navbarNavAltMarkup\"\n            aria-controls=\"navbarNavAltMarkup\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span class=\"navbar-toggler-icon\"></span>\n          </button>\n          <div\n            class=\"collapse navbar-collapse justify-content-end\"\n            id=\"navbarNavAltMarkup\"\n          >\n            <div class=\"navbar-nav\">\n              <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">\n                <PersonFill fontSize={25} style={{ marginRight: \"5px\" }} />\n                Welcome Admin!\n              </a>\n            </div>\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nexport default Navbar;\n","/home/aniket/projects/cakestore/src/components/cakecards/Cakecards.jsx",["44","45"],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":1,"column":28,"nodeType":"52","messageId":"53","endLine":1,"endColumn":34},{"ruleId":"50","severity":1,"message":"54","line":10,"column":10,"nodeType":"52","messageId":"53","endLine":10,"endColumn":15},{"ruleId":"50","severity":1,"message":"55","line":10,"column":17,"nodeType":"52","messageId":"53","endLine":10,"endColumn":25},{"ruleId":"56","severity":1,"message":"57","line":47,"column":6,"nodeType":"58","endLine":47,"endColumn":8,"suggestions":"59"},{"ruleId":"50","severity":1,"message":"60","line":16,"column":21,"nodeType":"52","messageId":"53","endLine":16,"endColumn":33},{"ruleId":"50","severity":1,"message":"61","line":27,"column":10,"nodeType":"52","messageId":"53","endLine":27,"endColumn":17},{"ruleId":"50","severity":1,"message":"62","line":27,"column":19,"nodeType":"52","messageId":"53","endLine":27,"endColumn":29},{"ruleId":"63","severity":1,"message":"64","line":12,"column":11,"nodeType":"65","endLine":12,"endColumn":44},{"ruleId":"63","severity":1,"message":"64","line":31,"column":15,"nodeType":"65","endLine":31,"endColumn":71},{"ruleId":"50","severity":1,"message":"66","line":2,"column":8,"nodeType":"52","messageId":"53","endLine":2,"endColumn":12},{"ruleId":"67","severity":1,"message":"68","line":34,"column":13,"nodeType":"65","endLine":34,"endColumn":52},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'cakes' is assigned a value but never used.","'setCakes' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'DesignerCake'. Either include it or remove the dependency array.","ArrayExpression",["71"],"'setCakeTypes' is assigned a value but never used.","'cakeImg' is assigned a value but never used.","'setCakeImg' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'img1' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"72","fix":"73"},"Update the dependencies array to be: [DesignerCake]",{"range":"74","text":"75"},[1539,1541],"[DesignerCake]"]