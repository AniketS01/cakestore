[{"/home/aniket/projects/cakestore/src/index.js":"1","/home/aniket/projects/cakestore/src/App.js":"2","/home/aniket/projects/cakestore/src/forms/CakeForm.js":"3","/home/aniket/projects/cakestore/src/pages/MainPage.js":"4","/home/aniket/projects/cakestore/src/components/Navbar.js":"5","/home/aniket/projects/cakestore/src/firebase.js":"6"},{"size":201,"mtime":1634802740140,"results":"7","hashOfConfig":"8"},{"size":169,"mtime":1634803696810,"results":"9","hashOfConfig":"8"},{"size":3700,"mtime":1634974491296,"results":"10","hashOfConfig":"8"},{"size":1017,"mtime":1634879286725,"results":"11","hashOfConfig":"8"},{"size":1204,"mtime":1634805577524,"results":"12","hashOfConfig":"8"},{"size":597,"mtime":1634878846601,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1y6svf6",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/home/aniket/projects/cakestore/src/index.js",[],["30","31"],"/home/aniket/projects/cakestore/src/App.js",[],"/home/aniket/projects/cakestore/src/forms/CakeForm.js",["32","33","34"],"import axios from 'axios';\nimport React, { useState, useRef } from 'react';\nimport { db } from '../firebase';\n\nconst CakeForm = () => {\n  const [cakeTypes, setCakeTypes] = useState([\n    'Designer cake',\n    'Festival cake',\n    'Birthday Cake',\n  ]);\n  const Add = cakeTypes.map((Add) => Add);\n  const name = useRef();\n  const description = useRef();\n  const price = useRef();\n  const Category = useRef();\n\n  const [cakeImg, setCakeImg] = useState();\n  const [cakePreview, setCakePreview] = useState();\n  const [success, setSuccess] = useState(false);\n  const [error, setError] = useState(false);\n\n  const HandleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      if (!cakePreview) return;\n      const { data } = await axios.post('http://localhost:5000/api/upload', {\n        data: cakePreview,\n      });\n      const detail = {\n        image: data.secure_url,\n        clourinary_id: data.public_id,\n        name: name.current.value,\n        description: description.current.value,\n        Category: Category.current.value,\n        price: price.current.value,\n      };\n\n      await db.collection('Cakes').add(detail);\n      setSuccess(true);\n      setError(false);\n      setTimeout(() => {\n        setSuccess(false);\n      }, 3000);\n    } catch (error) {\n      setError(true);\n      setSuccess(false);\n      setTimeout(() => {\n        setError(false);\n      }, 3000);\n    }\n  };\n\n  const preview = (file) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onloadend = () => {\n      setCakePreview(reader.result);\n    };\n  };\n\n  return (\n    <form onSubmit={HandleSubmit}>\n      <div className=\"container d-flex flex-column\">\n        {success && (\n          <div class=\"alert alert-success\" role=\"alert\">\n            success!\n          </div>\n        )}\n        {error && (\n          <div class=\"alert alert-danger\" role=\"alert\">\n            something went wrong!\n          </div>\n        )}\n        <label htmlFor=\"\" style={{ fontWeight: '600' }}>\n          {' '}\n          Image :\n          <input\n            type=\"file\"\n            onChange={(e) => preview(e.target.files[0])}\n            className=\"mb-2\"\n          />\n          {cakePreview && (\n            <img\n              style={{ height: '120px' }}\n              alt=\"enter img\"\n              src={cakePreview}\n            />\n          )}\n          {/* {cakeImg && console.log(URL.createObjectURL(cakeImg))} */}\n        </label>\n        <label htmlFor=\"\" style={{ fontWeight: '600' }}>\n          Name :{' '}\n          <input\n            type=\"text\"\n            placeholder=\"Enter Product name\"\n            className=\"mb-2\"\n            ref={name}\n          />\n        </label>\n        <label htmlFor=\"\" style={{ fontWeight: '600' }}>\n          description :{' '}\n        </label>\n        <textarea\n          name=\"\"\n          id=\"\"\n          cols=\"15\"\n          rows=\"5\"\n          placeholder=\"Enter a Description \"\n          className=\"mb-2\"\n          ref={description}\n        ></textarea>\n        <label htmlFor=\"\" style={{ fontWeight: '600' }}>\n          Price :{' '}\n          <input\n            type=\"text\"\n            placeholder=\"Enter price\"\n            className=\"mb-2\"\n            ref={price}\n          />\n        </label>\n\n        <label htmlFor=\"\" style={{ fontWeight: '600' }}>\n          Category :{' '}\n          <select name=\"\" id=\"\" className=\"mb-2\" ref={Category}>\n            {Add.map((address, key) => (\n              <option value={address}>{address}</option>\n            ))}\n          </select>\n        </label>\n\n        <button type=\"submit\" className=\"btn  btn-primary mt-3\">\n          Submit\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default CakeForm;\n","/home/aniket/projects/cakestore/src/pages/MainPage.js",["35","36"],"import React, { useRef, useState } from 'react';\nimport CakeForm from '../forms/CakeForm';\nimport { PlusCircleDotted } from 'react-bootstrap-icons';\nimport Navbar from '../components/Navbar';\nimport { db } from '../firebase';\n\nconst MainPage = () => {\n  const [showCakeForm, setShowCakeForm] = useState(false);\n\n  return (\n    <div>\n      <Navbar />\n      <div className=\"container\">\n        <div className=\"d-flex flex-row align-items-center pt-4\">\n          <h3>Add cake</h3>{' '}\n          <PlusCircleDotted\n            fontSize={25}\n            color=\"green\"\n            style={{ marginLeft: '5px' }}\n            onClick={() => {\n              if (showCakeForm) {\n                setShowCakeForm(false);\n              } else {\n                setShowCakeForm(true);\n              }\n            }}\n          />\n        </div>\n        {showCakeForm && (\n          <div className=\"p-4\">\n            {' '}\n            <CakeForm />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MainPage;\n","/home/aniket/projects/cakestore/src/components/Navbar.js",["37","38"],"import React from 'react';\nimport { PersonFill } from 'react-bootstrap-icons';\n\nconst Navbar = () => {\n  return (\n    <div>\n      <nav\n        class=\"navbar navbar-expand-lg navbar-light bg-light\"\n        style={{ height: '60px' }}\n      >\n        <div class=\"container-fluid\">\n          <a class=\"navbar-brand\" href=\"#\">\n            CakeStore\n          </a>\n          <button\n            class=\"navbar-toggler\"\n            type=\"button\"\n            data-bs-toggle=\"collapse\"\n            data-bs-target=\"#navbarNavAltMarkup\"\n            aria-controls=\"navbarNavAltMarkup\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span class=\"navbar-toggler-icon\"></span>\n          </button>\n          <div\n            class=\"collapse navbar-collapse justify-content-end\"\n            id=\"navbarNavAltMarkup\"\n          >\n            <div class=\"navbar-nav\">\n              <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">\n                <PersonFill fontSize={25} style={{ marginRight: '5px' }} />\n                Welcome Admin!\n              </a>\n            </div>\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nexport default Navbar;\n","/home/aniket/projects/cakestore/src/firebase.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":6,"column":21,"nodeType":"45","messageId":"46","endLine":6,"endColumn":33},{"ruleId":"43","severity":1,"message":"47","line":17,"column":10,"nodeType":"45","messageId":"46","endLine":17,"endColumn":17},{"ruleId":"43","severity":1,"message":"48","line":17,"column":19,"nodeType":"45","messageId":"46","endLine":17,"endColumn":29},{"ruleId":"43","severity":1,"message":"49","line":1,"column":17,"nodeType":"45","messageId":"46","endLine":1,"endColumn":23},{"ruleId":"43","severity":1,"message":"50","line":5,"column":10,"nodeType":"45","messageId":"46","endLine":5,"endColumn":12},{"ruleId":"51","severity":1,"message":"52","line":12,"column":11,"nodeType":"53","endLine":12,"endColumn":44},{"ruleId":"51","severity":1,"message":"52","line":31,"column":15,"nodeType":"53","endLine":31,"endColumn":71},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'setCakeTypes' is assigned a value but never used.","Identifier","unusedVar","'cakeImg' is assigned a value but never used.","'setCakeImg' is assigned a value but never used.","'useRef' is defined but never used.","'db' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]