[{"/home/aniket/projects/cakestore/src/index.js":"1","/home/aniket/projects/cakestore/src/App.js":"2","/home/aniket/projects/cakestore/src/forms/CakeForm.js":"3","/home/aniket/projects/cakestore/src/pages/MainPage.js":"4","/home/aniket/projects/cakestore/src/components/Navbar.js":"5","/home/aniket/projects/cakestore/src/firebase.js":"6"},{"size":201,"mtime":1634802740140,"results":"7","hashOfConfig":"8"},{"size":169,"mtime":1634803696810,"results":"9","hashOfConfig":"8"},{"size":3162,"mtime":1634900678965,"results":"10","hashOfConfig":"8"},{"size":1017,"mtime":1634879286725,"results":"11","hashOfConfig":"8"},{"size":1204,"mtime":1634805577524,"results":"12","hashOfConfig":"8"},{"size":597,"mtime":1634878846601,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1y6svf6",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/home/aniket/projects/cakestore/src/index.js",[],["29","30"],"/home/aniket/projects/cakestore/src/App.js",[],"/home/aniket/projects/cakestore/src/forms/CakeForm.js",["31"],"/home/aniket/projects/cakestore/src/pages/MainPage.js",["32","33"],"import React, { useRef, useState } from 'react';\nimport CakeForm from '../forms/CakeForm';\nimport { PlusCircleDotted } from 'react-bootstrap-icons';\nimport Navbar from '../components/Navbar';\nimport { db } from '../firebase';\n\nconst MainPage = () => {\n  const [showCakeForm, setShowCakeForm] = useState(false);\n\n  return (\n    <div>\n      <Navbar />\n      <div className=\"container\">\n        <div className=\"d-flex flex-row align-items-center pt-4\">\n          <h3>Add cake</h3>{' '}\n          <PlusCircleDotted\n            fontSize={25}\n            color=\"green\"\n            style={{ marginLeft: '5px' }}\n            onClick={() => {\n              if (showCakeForm) {\n                setShowCakeForm(false);\n              } else {\n                setShowCakeForm(true);\n              }\n            }}\n          />\n        </div>\n        {showCakeForm && (\n          <div className=\"p-4\">\n            {' '}\n            <CakeForm />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MainPage;\n","/home/aniket/projects/cakestore/src/components/Navbar.js",["34","35"],"import React from 'react';\nimport { PersonFill } from 'react-bootstrap-icons';\n\nconst Navbar = () => {\n  return (\n    <div>\n      <nav\n        class=\"navbar navbar-expand-lg navbar-light bg-light\"\n        style={{ height: '60px' }}\n      >\n        <div class=\"container-fluid\">\n          <a class=\"navbar-brand\" href=\"#\">\n            CakeStore\n          </a>\n          <button\n            class=\"navbar-toggler\"\n            type=\"button\"\n            data-bs-toggle=\"collapse\"\n            data-bs-target=\"#navbarNavAltMarkup\"\n            aria-controls=\"navbarNavAltMarkup\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span class=\"navbar-toggler-icon\"></span>\n          </button>\n          <div\n            class=\"collapse navbar-collapse justify-content-end\"\n            id=\"navbarNavAltMarkup\"\n          >\n            <div class=\"navbar-nav\">\n              <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">\n                <PersonFill fontSize={25} style={{ marginRight: '5px' }} />\n                Welcome Admin!\n              </a>\n            </div>\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nexport default Navbar;\n","/home/aniket/projects/cakestore/src/firebase.js",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":5,"column":21,"nodeType":"42","messageId":"43","endLine":5,"endColumn":33},{"ruleId":"40","severity":1,"message":"44","line":1,"column":17,"nodeType":"42","messageId":"43","endLine":1,"endColumn":23},{"ruleId":"40","severity":1,"message":"45","line":5,"column":10,"nodeType":"42","messageId":"43","endLine":5,"endColumn":12},{"ruleId":"46","severity":1,"message":"47","line":12,"column":11,"nodeType":"48","endLine":12,"endColumn":44},{"ruleId":"46","severity":1,"message":"47","line":31,"column":15,"nodeType":"48","endLine":31,"endColumn":71},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'setCakeTypes' is assigned a value but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'db' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]